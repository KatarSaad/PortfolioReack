{"ast":null,"code":"import styled, { css, keyframes } from 'styled-components';\nexport const FlexContainer = styled.div`\n  display: flex;\n   margin:0;!important\n    padding:0;!important\n  align-items: center; // This will vertically center the line next to the text\n`;\n// Spacer for creating gaps\nexport const Spacer = styled.div`\n  height: ${props => props.size || '20px'};\n`;\n\n// For text highlights\nexport const Highlight = styled.span`\n  color: #FFA500;\n  font-weight: bold;\n`;\n\n// For separators or dividers\nexport const Divider = styled.hr`\n  border: none;\n  height: 1px;\n  background: #ccc;\n  margin: 20px 0;\n`;\nexport const LinkButton = styled.a`\n  font-size: 1rem;\n  padding: 10px 15px;\n  border: none;\n  cursor: pointer;\n  background: #333;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 5px;\n  transition: background 0.3s;\n\n  &:hover {\n    background: #555;\n  }\n`;\n\n// Secondary button style\nexport const SecondaryButton = styled(LinkButton)`\n  background: #FFA500;\n  &:hover {\n    background: #FF8C00;\n  }\n`;\n\n// Subtitle styling\nexport const Subtitle = styled.h3`\n  font-size: 2.5rem;\n  color: #97FEED;\n  margin-bottom: 10px;\n`;\n\n// Flex Row container for horizontal layouts\nexport const FlexRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\n// Lighter styled paragraph\nexport const LightParagraph = styled.p`\n  font-size: 1rem;\n  color: #aaa;\n`;\n\n// Emphasized Container for important info\nexport const HighlightContainer = styled.div`\n  border: 1px solid #FFA500;\n  padding: 20px;\n  border-radius: 10px;\n  background: #FFFAF0;\n`;\n\n// Emphasized Text with shadow\nexport const ShadowText = styled.span`\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\n// Container with a background blur effect\nexport const BlurBackground = styled.div`\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 15px;\n  border-radius: 10px;\n`;\n\n// Box with drop shadow\nexport const DropShadowBox = styled.div`\n  box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  border-radius: 5px;\n`;\n\n// Circular Avatar for profile images\nexport const Avatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\n// Animated Button for attention\nexport const AnimatedButton = styled(LinkButton)`\n  animation: pulse 1.5s infinite;\n\n  @keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.1); }\n    100% { transform: scale(1); }\n  }\n`;\n\n// Flex column layout\nexport const FlexColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\n// Card for content blocks\nexport const Card = styled.div`\n    background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\n`;\n\n// Pill badges for tags, status, etc.\nexport const PillBadge = styled.span`\n  background-color: #FFA500;\n  color: #fff;\n  border-radius: 15px;\n  padding: 5px 15px;\n  font-size: 0.8rem;\n`;\n\n// Interactive List Item\nexport const InteractiveListItem = styled.li`\n  list-style-type: none;\n  padding: 10px 15px;\n  transition: background 0.2s;\n\n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n\n// Bold and larger text for emphasis\nexport const EmphasisText = styled.span`\n  font-weight: bold;\n  font-size: 1.2rem;\n`;\n\n// Muted Text for less important content\nexport const MutedText = styled.span`\n  color: #aaa;\n`;\n\n// ... You can keep expanding this based on your project's needs.\nexport const ProjectContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n    padding: 20px;\n`;\nexport const ProjectTitle = styled.h1`\n  font-size: 2.5rem;\n  \n  color: #333;\n  margin-bottom: 20px;\n`;\nexport const LinksContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  width:300px;\n`;\nexport const Description = styled.p`\n  font-size: 1.2rem;\n  color: #666;\n  line-height: 1.5;\n  margin-bottom: 20px;\n`;\nexport const CenteredGrowHorizontalLine = styled.div`\n  width: 30px;\n  height: 2px;\n  margin-top: 10px;\n  background-color: ${props => props.lineColor || '#00DFA2'};\n  transition: width 0.3s;\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n\n  \n`;\nexport const CenteredGrowHorizontalLineSmall = styled.div`\n  width: 30px;\n  height: 2px;\n  margin-bottom:20px;\n  margin-top: 0px;\n  margin-left: -30px; // This moves the line 50px to the left.\n\n  background-color: ${props => props.lineColor || '#00DFA2'};\n  transition: width 0.3s;\n  align-self: center; // This centers the line within its flex container.\n  // Remove the absolute positioning and related properties.\n`;\nexport const GrowVerticalLine = styled.div`\n  // Your original styles\n  margin-top: 50px;\n  width: 1px;\n  margin-right: 20px;\n  height: 50px;\n  padding: 3px;\n  transition: height 0.6s, box-shadow 0.3s;  // added box-shadow to the transition\n  transform: scaleX(0.3);\n\n  // Glowing effect\n  background-color: ${props => props.lineColor || '#00DFA2'};\n  box-shadow: 0 0 8px ${props => props.shadowColor || '#00DFA2'};\n\n \n`;\nexport const DemonstrationContainer = styled.div`\n  display: ${props => props.show ? 'block' : 'none'};\n   display: flex;\n  align-items: start;\n  background: rgba(255, 255, 255, 0.1);\n  padding: 0px;\n  border-radius: 10px;\n  margin-bottom: 20px;\n  &:hover ${CenteredGrowHorizontalLine}{\n    width:90%;\n  }\n   &:hover ${GrowVerticalLine} {\n    height: ${props => props.dynamicHeight || '500px'};!important\n  }\n  \n`;\nexport const StepsContainer = styled.ul`\n  list-style-type: none;\n  padding-left: 30px;\n  \n`;\nexport const StepItem = styled.li`\nposition: relative;  // Add this line\n  \ndisplay: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:hover ${CenteredGrowHorizontalLineSmall} {\n    width: 90%; \n}\n\n\n`;\nexport const StepDescription = styled.p`\n  font-size: 3.1rem;\n  color: #444;\n  padding-bottom: 40px;\n`;\nexport const GifContainer = styled.div`\n  width: 100%;\n  max-width: 80%; \n  height:800px;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  margin-bottom:30px;\n\n`;\nexport const CenteredH5 = styled.h5`\n  position: relative;\n  z-index: 1;  // to ensure it's above the line\n  text-align: center;\n  margin: 0;\n  padding-top: 10px;  // adjust as needed for vertical alignment\n  font-weight: 500;\n  font-size: 3.2rem;\n  color: #E1E5EA;\n  font-family: 'Roboto', sans-serif;\n`;\nexport const GifImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n// ... You can keep expanding this based on your project's needs.\n\nimport { defaultFallbackInView } from 'react-intersection-observer';\n\n// 1. 3D Flip Card: Can be used for hover effects on profile cards, or showcasing portfolio projects.\nexport const FlipCard = styled.div`\n  perspective: 1500px;\n\n  &:hover {\n    & > div:first-child {\n      transform: rotateY(180deg);\n    }\n  }\n`;\nexport const FlipCardInner = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transform-style: preserve-3d;\n  transition: transform 0.7s;\n`;\nexport const FlipCardFace = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n\n  ${props => props.back && css`\n    transform: rotateY(180deg);\n  `}\n`;\n\n// 2. Neumorphism (Soft UI): Trending UI design pattern\nexport const NeumorphicBox = styled.div`\n  background: #e0e0e0;\n  border-radius: 10px;\n  box-shadow: 10px 10px 20px #d1d1d1, -10px -10px 20px #ffffff;\n  padding: 20px;\n`;\n\n// 3. Glowing Border Box\nexport const GlowBox = styled.div`\n  border: 2px solid #fff;\n  box-shadow: 0 0 5px #FFA500, 0 0 5px #FFA500, 0 0 5px #FFA500;\n  border-radius: 10px;\n  margin-left:3px;\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n\n`;\n\n// 4. Gradient Background Button\n\n// 5. Parallax Scrolling Effect Container\nexport const ParallaxContainer = styled.div`\n  background-image: url('${props => props.bgImage}');\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: center;\n  height: 300px;\n`;\n\n// 6. Typewriter Style Text (mimics the look of text from a typewriter)\nexport const TypewriterText = styled.p`\n  font-family: 'Courier New', Courier, monospace;\n  white-space: pre-wrap;\n  font-size: 1.5rem;\n`;\n\n// 7. Pulsing Element (for attention or loading scenarios)\nexport const PulseCircle = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: #FFA500;\n  animation: pulse 1.5s infinite;\n\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 rgba(255, 165, 0, 0.7);\n    }\n    70% {\n      box-shadow: 0 0 0 10px rgba(255, 165, 0, 0);\n    }\n    100% {\n      box-shadow: 0 0 0 0 rgba(255, 165, 0, 0);\n    }\n  }\n`;\n\n// 8. Animated Underline Link\nexport const AnimatedUnderlineLink = styled.a`\n  color: #FFA500;\n  text-decoration: none;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background: #FFA500;\n    transform: scaleX(0);\n    transform-origin: right;\n    transition: transform 0.4s;\n  }\n\n  &:hover::after {\n    transform: scaleX(1);\n    transform-origin: left;\n  }\n`;\n\n// 9. Floating Element\nexport const FloatingElement = styled.div`\n  animation: float 3s infinite;\n\n  @keyframes float {\n    0% {\n      transform: translateY(0px);\n    }\n    50% {\n      transform: translateY(-10px);\n    }\n    100% {\n      transform: translateY(0px);\n    }\n  }\n`;\n\n// 10. ToolTip\nexport const ToolTip = styled.span`\n  position: relative;\n  &:hover::before {\n    content: attr(data-tip);\n    position: absolute;\n    bottom: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    padding: 10px;\n    border-radius: 8px;\n    background: rgba(0, 0, 0, 0.8);\n    color: white;\n    font-size: 0.9rem;\n  }\n`;\n\n// ... You can keep expanding this based on your project's needs.\n\n// ... Previous Components ...\n\n// 21. Parallax Container: A parallax effect container for background images\n\n// 22. Neumorphic Button: A button with a soft UI effect\n\n/////// ************************************************************************************************\n\n// 11. Skewed Button: Provides a slanted button effect\nexport const SkewedButton = styled.button`\n  transform: skew(-10deg);\n  background: #FFA500;\n  border: none;\n  padding: 10px 20px;\n  color: white;\n  cursor: pointer;\n  transition: background 0.3s;\n\n  &:hover {\n    background: #FF8C00;\n  }\n`;\nexport const GrowHorizontalLine = styled.div`\n   width: 50%;  // adjust width as needed for your requirements\n  height: 3px;\n  transition: width 0.3s;\n\n  // Styles from GlowingLine\n  margin: 20px;\n  background-color: ${props => props.lineColor || '#00DFA2'};\n  transition: box-shadow 0.3s, width 0.8s;  // merging transitions\n  box-shadow: 0 0 8px ${props => props.shadowColor || '#00DFA2'};\n\n  &:hover {\n    width: 100%;  // or whatever your hover effect should be\n  }\n\n \n`;\n\n// Vertical line that grows in height upon hover.\n\n// 12. Glassmorphism Card: Trending glass effect design pattern\nexport const GlassCard = styled.div`\nmin-height: 100%;\nheight: auto;\npadding:0;\n  background: rgba(255, 255, 255, 0.01);\n  padding: 1px;\n  border-radius: 5px;\n  height:100%;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  margin-bottom:20px;\n  padding-bottom:0;\n  \n  h5 {\n    margin:0px;!important\n    padding:0px;!important\n\n\n  }\n  p {\n    margin:0px;!important\n    padding:0px;!important\n\n\n   \n\n\n  }\n  \n  &:hover ${GrowVerticalLine} {\n    height: ${props => props.dynamicHeight || '50px'};\n  }\n&:hover ${GrowHorizontalLine} {\n    width: 100%; \n}\n\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.02) !important; \n    border-radius: 5px !important;\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15) !important;\n    \n    \n\n    p {\n      color: #E8EAE6 !important;  // Change paragraph color to E8EAE6 on hover\n    }\n\n    h5 {\n      color: #35A29F !important;  // Change h3 color to BEF992 on hover\n    }\n  }\n`;\n\n// 13. Text with Gradient Effect\n\n// 14. Blob Effect: Creates organic shaped blob as a background\nexport const BlobBackground = styled.div`\n  width: 200px;\n  height: 200px;\n  background: #FFA500;\n  border-radius: 50%;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: -10px;\n    right: -10px;\n    background: #FFA500;\n    width: 80%;\n    height: 80%;\n    border-radius: 50%;\n  }\n`;\n\n// 15. Ribbon Banner: Creates a ribbon-like banner effect on a card or box\nexport const RibbonBanner = styled.div`\n  position: relative;\n  padding: 20px;\n  &:before, &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    width: 0;\n    height: 0;\n    border-style: solid;\n  }\n  &:before {\n    left: 0;\n    border-width: 10px 10px 0;\n    border-color: #FFA500 transparent transparent;\n  }\n  &:after {\n    right: 0;\n    border-width: 0 10px 10px;\n    border-color: transparent transparent #FFA500;\n  }\n`;\n\n// 16. Dashed Outline Container: Useful for highlighting important sections\nexport const DashedContainer = styled.div`\n  border: 2px dashed #FFA500;\n  padding: 10px;\n`;\n\n// 17. Animated Checkbox: Checkbox with an animation upon check\nexport const AnimatedCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  &:checked::before {\n    content: '\\\\2713'; // Unicode checkmark\n    position: absolute;\n    font-size: 1.5rem;\n    animation: checkmark 0.4s ease-in-out;\n  }\n\n  @keyframes checkmark {\n    from {\n      transform: scale(0);\n    }\n    to {\n      transform: scale(1);\n    }\n  }\n`;\n\n// 18. Expanding Border Input: Input field with an expanding border effect on focus\nexport const ExpandingBorderInput = styled.input`\n  border: 1px solid #aaa;\n  transition: border 0.3s;\n\n  &:focus {\n    border-width: 3px;\n  }\n`;\n\n// 19. Rotating Loader: Rotating circle, useful for loading indicators\nexport const RotatingLoader = styled.div`\n  border: 4px solid rgba(255, 165, 0, 0.3);\n  border-top: 4px solid #FFA500;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\n// 20. Zigzag Separator: Zigzag shaped divider to separate sections\nexport const ZigzagSeparator = styled.div`\n  background: repeating-linear-gradient(-45deg, #FFA500, #FFA500 10px, transparent 10px, transparent 20px);\n  height: 10px;\n`;\n\n// ... You can continue adding more components or customize these as per your requirements.\n\n//******************************** */\n\nexport const NeumorphicButton = styled.button`\n  background: #e0e0e0;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 10px;\n  box-shadow: -5px -5px 10px #ffffff, 5px 5px 10px #aeaeae;\n  transition: all 0.3s ease;\n\n  &:active {\n    box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 7px #aeaeae;\n  }\n`;\n\n// 23. Floating Label Input: Input with a floating label animation\nexport const FloatingLabelInput = styled.div`\n  position: relative;\n\n  input {\n    border: none;\n    border-bottom: 2px solid #aaa;\n    padding: 10px 0;\n    width: 100%;\n    font-size: 1rem;\n    &:focus {\n      outline: none;\n      border-bottom-color: #FFA500;\n    }\n    &:focus + label,\n    &:not(:placeholder-shown) + label {\n      top: -20px;\n      font-size: 0.8rem;\n      color: #FFA500;\n    }\n  }\n\n  label {\n    position: absolute;\n    left: 0;\n    top: 0;\n    font-size: 1rem;\n    color: #777;\n    transition: all 0.3s;\n  }\n`;\n\n// 24. Blurred Background Section: A section with a frosted glass effect\nexport const BlurredBackground = styled.section`\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: 20px;\n  border-radius: 10px;\n`;\n\n// 25. Responsive Grid: A grid that adjusts its columns based on the screen size\nexport const ResponsiveGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\n// 26. Bouncing Loader: A simple bouncing dot animation for loading indicators\nexport const BouncingLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    width: 10px;\n    height: 10px;\n    background: #FFA500;\n    border-radius: 50%;\n    margin: 0 5px;\n    animation: bounce 0.8s infinite alternate;\n    \n    &:nth-child(2) {\n      animation-delay: 0.2s;\n    }\n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n  }\n\n  @keyframes bounce {\n    from {\n      transform: translateY(0);\n    }\n    to {\n      transform: translateY(-15px);\n    }\n  }\n`;\n\n// 27. Radial Progress Bar: A circular progress indicator\nexport const RadialProgressBar = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  border: 5px solid #e0e0e0;\n  position: relative;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    right: 5px;\n    bottom: 5px;\n    border-radius: 50%;\n    background: #fff;\n    z-index: 1;\n  }\n\n  div {\n    position: absolute;\n    width: 50%;\n    height: 100%;\n    overflow: hidden;\n    top: 0;\n\n    &:first-child {\n      left: 0;\n      transform: rotate(${props => props.percentage <= 50 ? 0 : (props.percentage - 50) * 1.8}deg);\n      background: #FFA500;\n    }\n\n    &:nth-child(2) {\n      left: 50%;\n      background: ${props => props.percentage <= 50 ? \"transparent\" : \"#FFA500\"};\n    }\n  }\n`;\n\n// 28. Gradient Background Container\nexport const GradientContainer = styled.div`\nbackground: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n  padding: 20px;\n  color: white;\n  width:300px;\n  height:50px;\n\n`;\n\n// 29. Tooltip: Useful for providing additional information on hover\nexport const Tooltip = styled.span`\n  position: relative;\n\n  &:hover::after {\n    content: attr(data-tooltip);\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    background: rgba(0, 0, 0, 0.8);\n    color: white;\n    border-radius: 5px;\n    padding: 5px 10px;\n    white-space: nowrap;\n  }\n`;\n\n// 30. Star Rating: Display star ratings\nexport const StarRating = styled.div`\n  display: flex;\n  align-items: center;\n  \n  span {\n    font-size: 1.5rem;\n    color: ${props => props.active ? \"#FFA500\" : \"#e0e0e0\"};\n    margin-right: 5px;\n  }\n`;\nexport const TextMod = styled.span`\n  font-size: ${props => props.size || '1rem'};\n  color: ${props => props.color || 'black'};\n  font-style: ${props => props.type || 'normal'};\n  font-weight: ${props => props.weight || 'normal'};\n  font-family: ${props => props.font || 'Arial, sans-serif'};\n  text-decoration: ${props => props.decoration || 'none'};\n  text-transform: ${props => props.transform || 'none'};\n  letter-spacing: ${props => props.spacing || 'normal'};\n  line-height: ${props => props.lineHeight || 'normal'};\n`;\n//                            TODO:\n\n// Horizontal line that grows in width upon hover.\n\n// Line made of dots that expand in spacing upon hover.\nexport const DottedLineExpand = styled.div`\n  height: 2px;\n  border-bottom: 2px dotted ${props => props.lineColor || '#333'};\n  transition: border-spacing 0.3s;\n\n  &:hover {\n    border-spacing: 5px;\n  }\n`;\n\n// Line that subtly increases and decreases in thickness.\nconst breatheAnimation = keyframes`\n  0%, 100% {\n    height: 2px;\n  }\n  50% {\n    height: 4px;\n  }\n`;\nexport const LineBreathe = styled.div`\n  background-color: ${props => props.lineColor || '#333'};\n  animation: ${breatheAnimation} 1.5s infinite;\n`;\n\n// Line that emits a subtle glow upon hover.\nexport const GlowingLine = styled.div`\n  height: 3px;\n  margin:20px;\n  background-color: ${props => props.lineColor || '#00DFA2'};\n  transition: box-shadow 0.3s;\n  box-shadow: 0 0 8px ${props => props.shadowColor || '#00DFA2'};\n\n`;\n\n// Line that pulses in size upon hover.\nconst pulseAnimation = keyframes`\n  0%, 100% {\n    height: 2px;\n  }\n  50% {\n    height: 4px;\n  }\n`;\nexport const LinePulse = styled.div`\n  background-color: ${props => props.lineColor || '#333'};\n\n  &:hover {\n    animation: ${pulseAnimation} 1s infinite;\n  }\n`;\n\n// Line made of dashes that animate as if moving.\nconst dashAnimation = keyframes`\n  to {\n    background-position: 100% 0;\n  }\n`;\nexport const DashAnimatedLine = styled.div`\n  height: 2px;\n  background-image: linear-gradient(90deg, ${props => props.lineColor || '#333'} 50%, transparent 50%);\n  background-size: 10px 100%;\n  animation: ${dashAnimation} 1s infinite linear;\n`;\n\n// Line that shrinks on hover.\nexport const LineShrink = styled.div`\n  height: 2px;\n  background-color: ${props => props.lineColor || '#333'};\n  width: 100%;\n  transition: width 0.3s;\n\n  &:hover {\n    width: 50%;\n  }\n`;\n\n// Line that transitions its color upon hover.\nexport const ColorTransitionLine = styled.div`\n  height: 2px;\n  background-color: ${props => props.initialColor || '#333'};\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: ${props => props.hoverColor || '#FFA500'};\n  }\n`;\n\n// Line that animates like a wave.\nconst waveAnimation = keyframes`\n  0%, 100% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(5px);\n  }\n`;\nexport const WavyLine = styled.div`\n  height: 2px;\n  background-color: ${props => props.lineColor || '#333'};\n  animation: ${waveAnimation} 1s infinite;\n`;\n\n// -------------------\n// Shapes Animations:\n// -------------------\n\n// Circle shape that expands on interaction.\nexport const CircleExpand = styled.div`\n  width: 450px;\n  height: 450px;\n  border-radius: 50%;\n  background-color: ${props => props.lineColor || '#00DFA2'};\n  box-shadow: 0 0 8px ${props => props.shadowColor || '#00DFA2'};  transition: transform 0.5s;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\n// Square that rotates upon a certain action.\nexport const SquareRotate = styled.div`\n  width: 50px;\n  height: 50px;\n  background-color: green;\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: rotate(45deg);\n  }\n`;\n\n// Triangle that tilts upon interaction.\nexport const TriangleTilt = styled.div`\n  width: 0;\n  height: 0;\n  border-left: 25px solid transparent;\n  border-right: 25px solid transparent;\n  border-bottom: 50px solid yellow;\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: skewY(10deg);\n  }\n`;\n\n// Star shape that pulses using keyframes.\n\nexport const StarPulse = styled.div`\n  clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);\n  width: 100px;\n  height: 100px;\n  background-color: gold;\n  animation: ${pulseAnimation} 1s infinite;\n`;\n\n// Polygon that jitters using keyframes.\nconst jitterAnimation = keyframes`\n  0% { transform: translate(0); }\n  25% { transform: translate(-5px, 5px); }\n  50% { transform: translate(5px, -5px); }\n  75% { transform: translate(-5px, -5px); }\n  100% { transform: translate(5px, 5px); }\n`;\nexport const PolygonJitter = styled.div`\n  width: 90px;\n  height: 90px;\n  clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);\n  background-color: orange;\n  animation: ${jitterAnimation} 0.5s infinite;\n`;\n\n// ------------------------------\n// Image animations, styling, effects:\n// ------------------------------\n\n// Image that zooms in slightly upon hover.\nexport const ImageZoom = styled.img`\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\n// Image that transitions from grayscale to color when hovered over.\nexport const ImageGrayscaleToColor = styled.img`\n  filter: grayscale(100%);\n  transition: filter 0.5s;\n\n  &:hover {\n    filter: grayscale(0%);\n  }\n`;\n\n// Image that tilts in 3D space upon hover.\nexport const ImageTilt = styled.img`\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: perspective(500px) rotateX(10deg) rotateY(10deg);\n  }\n`;\n\n// ... Continue for ImagePan and ImageColorTint ...\n\n// ------------------------------\n// Text Modifications:\n// ------------------------------\n\nexport const DynamicFont = styled.span`\n  font-size: ${props => props.size || '16px'};\n  font-weight: ${props => props.weight || 'normal'};\n`;\nexport const FontFamilySwitcher = styled.span`\n  font-family: ${props => props.font || 'Arial, sans-serif'};\n`;\nexport const ColoredText = styled.span`\n  color: ${props => props.color || 'black'};\n`;\nexport const WeightedText = styled.span`\n  font-weight: ${props => props.weight || 'normal'};\n`;\nexport const ItalicText = styled.span`\n  font-style: ${({\n  italic\n}) => italic ? 'italic' : 'normal'};\n`;\nexport const UnderlinedText = styled.span`\n  text-decoration: ${({\n  underline\n}) => underline ? 'underline' : 'none'};\n`;\nexport const UpperCaseText = styled.span`\n  text-transform: uppercase;\n`;\nexport const LowerCaseText = styled.span`\n  text-transform: lowercase;\n`;\nexport const LetterSpacingText = styled.span`\n  letter-spacing: ${({\n  spacing\n}) => spacing || 'normal'};\n`;\nexport const LineHeightText = styled.span`\n  line-height: ${({\n  lineHeight\n}) => lineHeight || 'normal'};\n`;\n\n// ------------------------------\n// On Hover:\n// ------------------------------\n\nconst elevateAnimation = keyframes`\n  from { transform: translateY(0); }\n  to { transform: translateY(-10px); }\n`;\nexport const HoverElevateText = styled.span`\n  &:hover {\n    animation: ${elevateAnimation} 0.3s forwards;\n  }\n`;\nexport const ImageRevealDescription = styled.figure`\n  background-image: url(${props => props.src});\n  width: 200px;\n  height: 200px;\n  position: relative;\n  \n  &::before {\n    content: '${props => props.caption}';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0,0,0,0.7);\n    color: #fff;\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n\n  &:hover::before {\n    opacity: 1;\n  }\n`;\nexport const HoverRotateDiv = styled.div`\n  &:hover {\n    transform: rotate(10deg);\n  }\n`;\n\n// ... Continue for other hover effects ...\n// --------------\n// On Hover:\n// --------------\n\n// TextUnderlineSlide\nexport const TextUnderlineSlide = styled.span`\n  position: relative;\n  padding-bottom: 2px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 0;\n    height: 1px;\n    background-color: currentColor;\n    transition: width 0.3s;\n  }\n\n  &:hover::after {\n    width: 100%;\n  }\n`;\n\n// BackgroundFade\nexport const BackgroundFade = styled.div`\n  background-color: #f5f5f5; \n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n\n// HoverScale\nexport const HoverScale = styled.div`\n  transform: scale(1);\n  transition: transform 0.3s;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\n// BorderGlow\nexport const BorderGlow = styled.div`\n  border: 2px solid #f5f5f5;\n  transition: border-color 0.3s;\n\n  &:hover {\n    border-color: #e0e0e0;\n  }\n`;\n\n// FlipOnHover\nexport const FlipOnHover = styled.div`\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n\n  &:hover {\n    transform: rotateY(180deg);\n  }\n`;\n\n// ShakeOnHover\nconst shakeAnimation = keyframes`\n  0% { transform: translate(0); }\n  25% { transform: translate(-5px); }\n  50% { transform: translate(5px); }\n  75% { transform: translate(-5px); }\n  100% { transform: translate(0); }\n`;\nexport const ShakeOnHover = styled.div`\n  &:hover {\n    animation: ${shakeAnimation} 0.5s;\n  }\n`;\n// HoverSlideRight\nexport const HoverSlideRight = styled.div`\n  transform: translateX(0);\n  transition: transform 0.3s;\n\n  &:hover {\n    transform: translateX(10px);\n  }\n`;\n\n// BackgroundZoom\nexport const BackgroundZoom = styled.div`\n  background: url(${props => props.bgImage}) center/100% no-repeat;\n  transition: background-size 0.4s;\n\n  &:hover {\n    background-size: 120%;\n  }\n`;\n\n// HoverPush\nexport const HoverPush = styled.button`\n  transform: scale(1);\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(0.95);\n  }\n`;\n\n// HoverBounce\nconst bounceAnimation = keyframes`\n  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n  40% { transform: translateY(-10px); }\n  60% { transform: translateY(-5px); }\n`;\nexport const HoverBounce = styled.div`\n  &:hover {\n    animation: ${bounceAnimation} 1s;\n  }\n`;\n\n// HoverColorShift\nexport const HoverColorShift = styled.div`\n  background-color: #f5f5f5;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #0099cc;\n  }\n`;\n\n// HoverBlur\nexport const HoverBlur = styled.div`\n  filter: blur(0);\n  transition: filter 0.3s;\n\n  &:hover {\n    filter: blur(4px);\n  }\n`;\n\n// HoverSquish\nexport const HoverSquish = styled.div`\n  transform: scaleY(1);\n  transition: transform 0.3s;\n\n  &:hover {\n    transform: scaleY(0.9);\n  }\n`;\n\n// HoverWobble\nconst wobbleAnimation = keyframes`\n  0% { transform: rotate(0); }\n  30% { transform: rotate(-5deg); }\n  60% { transform: rotate(5deg); }\n  100% { transform: rotate(0); }\n`;\nexport const HoverWobble = styled.div`\n  &:hover {\n    animation: ${wobbleAnimation} 0.5s;\n  }\n`;\n\n// HoverPop\nexport const HoverPop = styled.div`\n  transform: scale(1);\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\n// HoverSwing\nconst swingAnimation = keyframes`\n  20% { transform: rotate(15deg); }\n  40% { transform: rotate(-10deg); }\n  60% { transform: rotate(5deg); }\n  80% { transform: rotate(-5deg); }\n  100% { transform: rotate(0deg); }\n`;\nexport const HoverSwing = styled.div`\n  &:hover {\n    animation: ${swingAnimation} 1s;\n  }\n`;\n\n// HoverSpin\nexport const HoverSpin = styled.div`\n  transition: transform 0.6s;\n\n  &:hover {\n    transform: rotate(360deg);\n  }\n`;\nexport const ChangeTextColorOnHover = styled.div`\n  transition: 0.3s all;\n  &:hover {\n    color: ${props => props.hoverColor || props.color};  // defaults to blue if no hoverColor provided\n  }\n`;\n\n/// ON CLICK////////////////////////////////\n\n// Animations and mixins\nconst shake = keyframes`\n  10%, 90% { transform: translate3d(-1px, 0, 0); }\n  20%, 80% { transform: translate3d(2px, 0, 0); }\n  30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }\n  40%, 60% { transform: translate3d(4px, 0, 0); }\n`;\n\n// Components\n\nexport const ClickShake = styled.div`\n  &:active {\n    animation: ${shake} 0.5s cubic-bezier(.36,.07,.19,.97) both;\n  }\n`;\nexport const ClickFade = styled.div`\n  opacity: 1;\n  transition: opacity 0.3s;\n\n  &:active {\n    opacity: 0;\n  }\n`;\nexport const ClickPush = styled.div`\n  transform: scale(1);\n  transition: transform 0.2s;\n\n  &:active {\n    transform: scale(0.9);\n  }\n`;\nexport const ClickBounce = styled.div`\n  &:active {\n    animation: bounce 0.3s;\n  }\n`;\nexport const ClickRipple = styled.div`\n  // This is a simplified version and can be enhanced further\n  position: relative;\n  overflow: hidden;\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background: radial-gradient(circle, rgba(255,255,255,1), rgba(255,255,255,0.4));\n    transform: scale(0);\n    transition: transform 0.5s, opacity 1s;\n    opacity: 0;\n  }\n\n  &:active:after {\n    transform: scale(4);\n    opacity: 0.6;\n  }\n`;\nexport const ClickColorChange = styled.div`\n  color: black;\n\n  &:active {\n    color: red;  // Example color, adjust as needed\n  }\n`;\nexport const ClickRotate = styled.div`\n  transition: transform 0.3s;\n\n  &:active {\n    transform: rotate(90deg);\n  }\n`;\nexport const ClickFlip = styled.div`\n  transition: transform 0.3s;\n  transform-style: preserve-3d;\n\n  &:active {\n    transform: rotateY(180deg);\n  }\n`;\nexport const ClickZoom = styled.div`\n  transition: transform 0.3s;\n\n  &:active {\n    transform: scale(1.5); // Example scale factor, adjust as needed\n  }\n`;\nexport const ClickSlide = styled.div`\n  transition: transform 0.3s;\n\n  &:active {\n    transform: translateX(100px); // Example translation, adjust as needed\n  }\n`;\nexport const ClickPulse = styled.div`\n  // Add pulse animation here\n`;\nexport const ClickJiggle = styled.div`\n  // Add jiggle animation here\n`;\nexport const ClickSquish = styled.div`\n  // Add squish animation here\n`;\nexport const ClickBackgroundFill = styled.div`\n  transition: background-color 0.3s;\n\n  &:active {\n    background-color: blue; // Example color, adjust as needed\n  }\n`;\nexport const ClickBorderExpand = styled.div`\n  border: 1px solid black; // Default state\n  transition: border 0.3s;\n\n  &:active {\n    border-width: 5px;  // Example width, adjust as needed\n  }\n`;\nexport const ClickShadowGrow = styled.div`\n  box-shadow: 0px 0px 5px rgba(0,0,0,0.5); // Default state\n  transition: box-shadow 0.3s;\n\n  &:active {\n    box-shadow: 0px 0px 15px rgba(0,0,0,0.8);  // Example shadow, adjust as needed\n  }\n`;\nexport const ClickTextReveal = styled.div`\n  // The actual implementation may vary based on the desired effect\n`;\nexport const ClickWave = styled.div`\n  // Add wave animation here\n`;\nexport const ClickTilt = styled.div`\n  transition: transform 0.3s;\n\n  &:active {\n    transform: skewX(20deg);  // Example skew, adjust as needed\n  }\n`;\nexport const ClickVibrate = styled.div`\n  // Add vibrate animation here\n`;\nconst gradientShift = keyframes`\n  0%, 100% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n`;\nconst gradientAnimation = css`\n  animation: ${gradientShift} 6s linear infinite;\n`;\nconst getColor = color => {\n  return color || 'transparent';\n};\nexport const HoverGradientShift = styled.div`\n  width:${props => props.width || 300}px;\n  height:${props => props.height || 200}px;\n    background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n    ${gradientAnimation}\n\n  &:hover {\n    background: linear-gradient(to right, ${props => getColor(props.hoverStartColor)}, ${props => getColor(props.hoverEndColor)});\n    animation-direction: reverse;\n  }\n`;\nexport const GradientBackground = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%; \n\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(to bottom, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n`;\nexport const GradientText = styled.h1`\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n  -webkit-background-clip: text;\n  color: transparent;\n`;\nexport const GradientBorder = styled.div`\n  width: 150px;\n  height: 150px;\n  border: 5px solid transparent;\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n  background-clip: padding-box;\n`;\nexport const AnimatedGradient = styled.div`\n  width: 150px;\n  height: 150px;\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n  ${gradientAnimation}\n`;\nexport const GradientMask = styled.div`\n  position: relative;\n  width: 200px;\n  height: 200px;\n  overflow: hidden;\n  &:before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(to right, transparent, black);\n    opacity: 0.5;\n  }\n`;\nexport const GradientButton = styled.button`\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  cursor: pointer;\n  transition: background 0.3s;\n  &:hover {\n    background: linear-gradient(to right, ${props => getColor(props.endColor)}, ${props => getColor(props.startColor)});\n  }\n`;\nexport const GradientScrollbar = styled.div`\n  width: 300px;\n  height: 500px;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 10px;\n    background: linear-gradient(to bottom, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 5px;\n    background-clip: padding-box;\n  }\n`;\nexport const GradientShadow = styled.div`\n  width: 150px;\n  height: 150px;\n  box-shadow: 5px 5px 20px -5px #888888, inset 0px 0px 5px 0px #ffffff;\n  ${gradientAnimation}\n`;\nexport const GradientIconFill = styled.div`\n  width: 150px;\n  height: 150px;\n  background: url('your-icon-url.png') center/cover;\n  mask: linear-gradient(to right, transparent, black);\n  mask-composite: destination-out;\n  background-clip: padding-box;\n`;\n\n// Usage example:\n/* \r\n<GradientBackground startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<GradientText startColor=\"#ff6e7f\" endColor=\"#bfe9ff\">Gradient Text</GradientText>\r\n<HoverGradientShift startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<GradientBorder startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<AnimatedGradient startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<GradientMask />\r\n<GradientButton startColor=\"#ff6e7f\" endColor=\"#bfe9ff\">Gradient Button</GradientButton>\r\n<GradientScrollbar startColor=\"#ff6e7f\" endColor=\"#bfe9ff\">\r\n  Scrollable content\r\n</GradientScrollbar>\r\n<GradientShadow startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<GradientIconFill /> \r\n*/","map":{"version":3,"names":["styled","css","keyframes","FlexContainer","div","Spacer","props","size","Highlight","span","Divider","hr","LinkButton","a","SecondaryButton","Subtitle","h3","FlexRow","LightParagraph","p","HighlightContainer","ShadowText","BlurBackground","DropShadowBox","Avatar","img","AnimatedButton","FlexColumn","Card","getColor","startColor","endColor","PillBadge","InteractiveListItem","li","EmphasisText","MutedText","ProjectContainer","ProjectTitle","h1","LinksContainer","Description","CenteredGrowHorizontalLine","lineColor","CenteredGrowHorizontalLineSmall","GrowVerticalLine","shadowColor","DemonstrationContainer","show","dynamicHeight","StepsContainer","ul","StepItem","StepDescription","GifContainer","CenteredH5","h5","GifImage","defaultFallbackInView","FlipCard","FlipCardInner","FlipCardFace","back","NeumorphicBox","GlowBox","ParallaxContainer","bgImage","TypewriterText","PulseCircle","AnimatedUnderlineLink","FloatingElement","ToolTip","SkewedButton","button","GrowHorizontalLine","GlassCard","BlobBackground","RibbonBanner","DashedContainer","AnimatedCheckbox","input","attrs","type","ExpandingBorderInput","RotatingLoader","ZigzagSeparator","NeumorphicButton","FloatingLabelInput","BlurredBackground","section","ResponsiveGrid","BouncingLoader","RadialProgressBar","percentage","GradientContainer","Tooltip","StarRating","active","TextMod","color","weight","font","decoration","transform","spacing","lineHeight","DottedLineExpand","breatheAnimation","LineBreathe","GlowingLine","pulseAnimation","LinePulse","dashAnimation","DashAnimatedLine","LineShrink","ColorTransitionLine","initialColor","hoverColor","waveAnimation","WavyLine","CircleExpand","SquareRotate","TriangleTilt","StarPulse","jitterAnimation","PolygonJitter","ImageZoom","ImageGrayscaleToColor","ImageTilt","DynamicFont","FontFamilySwitcher","ColoredText","WeightedText","ItalicText","italic","UnderlinedText","underline","UpperCaseText","LowerCaseText","LetterSpacingText","LineHeightText","elevateAnimation","HoverElevateText","ImageRevealDescription","figure","src","caption","HoverRotateDiv","TextUnderlineSlide","BackgroundFade","HoverScale","BorderGlow","FlipOnHover","shakeAnimation","ShakeOnHover","HoverSlideRight","BackgroundZoom","HoverPush","bounceAnimation","HoverBounce","HoverColorShift","HoverBlur","HoverSquish","wobbleAnimation","HoverWobble","HoverPop","swingAnimation","HoverSwing","HoverSpin","ChangeTextColorOnHover","shake","ClickShake","ClickFade","ClickPush","ClickBounce","ClickRipple","ClickColorChange","ClickRotate","ClickFlip","ClickZoom","ClickSlide","ClickPulse","ClickJiggle","ClickSquish","ClickBackgroundFill","ClickBorderExpand","ClickShadowGrow","ClickTextReveal","ClickWave","ClickTilt","ClickVibrate","gradientShift","gradientAnimation","HoverGradientShift","width","height","hoverStartColor","hoverEndColor","GradientBackground","GradientText","GradientBorder","AnimatedGradient","GradientMask","GradientButton","GradientScrollbar","GradientShadow","GradientIconFill"],"sources":["C:/Users/Saad/Desktop/react portfolio/src/StyledComp.js"],"sourcesContent":["import styled, { css, keyframes } from 'styled-components';\r\nexport const FlexContainer = styled.div`\r\n  display: flex;\r\n   margin:0;!important\r\n    padding:0;!important\r\n  align-items: center; // This will vertically center the line next to the text\r\n`;\r\n// Spacer for creating gaps\r\nexport const Spacer = styled.div`\r\n  height: ${props => props.size || '20px'};\r\n`;\r\n\r\n// For text highlights\r\nexport const Highlight = styled.span`\r\n  color: #FFA500;\r\n  font-weight: bold;\r\n`;\r\n\r\n// For separators or dividers\r\nexport const Divider = styled.hr`\r\n  border: none;\r\n  height: 1px;\r\n  background: #ccc;\r\n  margin: 20px 0;\r\n`;\r\nexport const LinkButton = styled.a`\r\n  font-size: 1rem;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background: #333;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n  transition: background 0.3s;\r\n\r\n  &:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\n// Secondary button style\r\nexport const SecondaryButton = styled(LinkButton)`\r\n  background: #FFA500;\r\n  &:hover {\r\n    background: #FF8C00;\r\n  }\r\n`;\r\n\r\n// Subtitle styling\r\nexport const Subtitle = styled.h3`\r\n  font-size: 2.5rem;\r\n  color: #97FEED;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\n// Flex Row container for horizontal layouts\r\nexport const FlexRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\n// Lighter styled paragraph\r\nexport const LightParagraph = styled.p`\r\n  font-size: 1rem;\r\n  color: #aaa;\r\n`;\r\n\r\n// Emphasized Container for important info\r\nexport const HighlightContainer = styled.div`\r\n  border: 1px solid #FFA500;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background: #FFFAF0;\r\n`;\r\n\r\n// Emphasized Text with shadow\r\nexport const ShadowText = styled.span`\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\n// Container with a background blur effect\r\nexport const BlurBackground = styled.div`\r\n  backdrop-filter: blur(5px);\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n`;\r\n\r\n// Box with drop shadow\r\nexport const DropShadowBox = styled.div`\r\n  box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n`;\r\n\r\n// Circular Avatar for profile images\r\nexport const Avatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n`;\r\n\r\n// Animated Button for attention\r\nexport const AnimatedButton = styled(LinkButton)`\r\n  animation: pulse 1.5s infinite;\r\n\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); }\r\n    50% { transform: scale(1.1); }\r\n    100% { transform: scale(1); }\r\n  }\r\n`;\r\n\r\n// Flex column layout\r\nexport const FlexColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n\r\n// Card for content blocks\r\nexport const Card = styled.div`\r\n    background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\n// Pill badges for tags, status, etc.\r\nexport const PillBadge = styled.span`\r\n  background-color: #FFA500;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  padding: 5px 15px;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\n// Interactive List Item\r\nexport const InteractiveListItem = styled.li`\r\n  list-style-type: none;\r\n  padding: 10px 15px;\r\n  transition: background 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\n// Bold and larger text for emphasis\r\nexport const EmphasisText = styled.span`\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\n// Muted Text for less important content\r\nexport const MutedText = styled.span`\r\n  color: #aaa;\r\n`;\r\n\r\n// ... You can keep expanding this based on your project's needs.\r\nexport const ProjectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n    padding: 20px;\r\n`;\r\n\r\nexport const ProjectTitle = styled.h1`\r\n  font-size: 2.5rem;\r\n  \r\n  color: #333;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const LinksContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n  width:300px;\r\n`;\r\n\r\n\r\n\r\nexport const Description = styled.p`\r\n  font-size: 1.2rem;\r\n  color: #666;\r\n  line-height: 1.5;\r\n  margin-bottom: 20px;\r\n`;\r\nexport const CenteredGrowHorizontalLine = styled.div`\r\n  width: 30px;\r\n  height: 2px;\r\n  margin-top: 10px;\r\n  background-color: ${props => props.lineColor || '#00DFA2'};\r\n  transition: width 0.3s;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  \r\n`;\r\nexport const CenteredGrowHorizontalLineSmall = styled.div`\r\n  width: 30px;\r\n  height: 2px;\r\n  margin-bottom:20px;\r\n  margin-top: 0px;\r\n  margin-left: -30px; // This moves the line 50px to the left.\r\n\r\n  background-color: ${props => props.lineColor || '#00DFA2'};\r\n  transition: width 0.3s;\r\n  align-self: center; // This centers the line within its flex container.\r\n  // Remove the absolute positioning and related properties.\r\n`;\r\nexport const GrowVerticalLine = styled.div`\r\n  // Your original styles\r\n  margin-top: 50px;\r\n  width: 1px;\r\n  margin-right: 20px;\r\n  height: 50px;\r\n  padding: 3px;\r\n  transition: height 0.6s, box-shadow 0.3s;  // added box-shadow to the transition\r\n  transform: scaleX(0.3);\r\n\r\n  // Glowing effect\r\n  background-color: ${props => props.lineColor || '#00DFA2'};\r\n  box-shadow: 0 0 8px ${props => props.shadowColor || '#00DFA2'};\r\n\r\n \r\n`;\r\n\r\nexport const DemonstrationContainer = styled.div`\r\n  display: ${props => (props.show ? 'block' : 'none')};\r\n   display: flex;\r\n  align-items: start;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  padding: 0px;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  &:hover ${CenteredGrowHorizontalLine }{\r\n    width:90%;\r\n  }\r\n   &:hover ${GrowVerticalLine} {\r\n    height: ${props => props.dynamicHeight || '500px'};!important\r\n  }\r\n  \r\n`;\r\n\r\nexport const StepsContainer = styled.ul`\r\n  list-style-type: none;\r\n  padding-left: 30px;\r\n  \r\n`;\r\n\r\nexport const StepItem = styled.li`\r\nposition: relative;  // Add this line\r\n  \r\ndisplay: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &:hover ${CenteredGrowHorizontalLineSmall} {\r\n    width: 90%; \r\n}\r\n\r\n\r\n`;\r\n\r\nexport const StepDescription = styled.p`\r\n  font-size: 3.1rem;\r\n  color: #444;\r\n  padding-bottom: 40px;\r\n`;\r\n\r\nexport const GifContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 80%; \r\n  height:800px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  margin-bottom:30px;\r\n\r\n`;\r\nexport const CenteredH5 = styled.h5`\r\n  position: relative;\r\n  z-index: 1;  // to ensure it's above the line\r\n  text-align: center;\r\n  margin: 0;\r\n  padding-top: 10px;  // adjust as needed for vertical alignment\r\n  font-weight: 500;\r\n  font-size: 3.2rem;\r\n  color: #E1E5EA;\r\n  font-family: 'Roboto', sans-serif;\r\n`;\r\n\r\n\r\nexport const GifImage = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n// ... You can keep expanding this based on your project's needs.\r\n\r\n\r\n\r\n\r\nimport { defaultFallbackInView } from 'react-intersection-observer';\r\n\r\n// 1. 3D Flip Card: Can be used for hover effects on profile cards, or showcasing portfolio projects.\r\nexport const FlipCard = styled.div`\r\n  perspective: 1500px;\r\n\r\n  &:hover {\r\n    & > div:first-child {\r\n      transform: rotateY(180deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FlipCardInner = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform-style: preserve-3d;\r\n  transition: transform 0.7s;\r\n`;\r\n\r\nexport const FlipCardFace = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  backface-visibility: hidden;\r\n\r\n  ${props => props.back && css`\r\n    transform: rotateY(180deg);\r\n  `}\r\n`;\r\n\r\n// 2. Neumorphism (Soft UI): Trending UI design pattern\r\nexport const NeumorphicBox = styled.div`\r\n  background: #e0e0e0;\r\n  border-radius: 10px;\r\n  box-shadow: 10px 10px 20px #d1d1d1, -10px -10px 20px #ffffff;\r\n  padding: 20px;\r\n`;\r\n\r\n// 3. Glowing Border Box\r\nexport const GlowBox = styled.div`\r\n  border: 2px solid #fff;\r\n  box-shadow: 0 0 5px #FFA500, 0 0 5px #FFA500, 0 0 5px #FFA500;\r\n  border-radius: 10px;\r\n  margin-left:3px;\r\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n\r\n`;\r\n\r\n// 4. Gradient Background Button\r\n\r\n\r\n// 5. Parallax Scrolling Effect Container\r\nexport const ParallaxContainer = styled.div`\r\n  background-image: url('${props => props.bgImage}');\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n  background-position: center;\r\n  height: 300px;\r\n`;\r\n\r\n// 6. Typewriter Style Text (mimics the look of text from a typewriter)\r\nexport const TypewriterText = styled.p`\r\n  font-family: 'Courier New', Courier, monospace;\r\n  white-space: pre-wrap;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\n// 7. Pulsing Element (for attention or loading scenarios)\r\nexport const PulseCircle = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background: #FFA500;\r\n  animation: pulse 1.5s infinite;\r\n\r\n  @keyframes pulse {\r\n    0% {\r\n      box-shadow: 0 0 0 0 rgba(255, 165, 0, 0.7);\r\n    }\r\n    70% {\r\n      box-shadow: 0 0 0 10px rgba(255, 165, 0, 0);\r\n    }\r\n    100% {\r\n      box-shadow: 0 0 0 0 rgba(255, 165, 0, 0);\r\n    }\r\n  }\r\n`;\r\n\r\n// 8. Animated Underline Link\r\nexport const AnimatedUnderlineLink = styled.a`\r\n  color: #FFA500;\r\n  text-decoration: none;\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 2px;\r\n    background: #FFA500;\r\n    transform: scaleX(0);\r\n    transform-origin: right;\r\n    transition: transform 0.4s;\r\n  }\r\n\r\n  &:hover::after {\r\n    transform: scaleX(1);\r\n    transform-origin: left;\r\n  }\r\n`;\r\n\r\n// 9. Floating Element\r\nexport const FloatingElement = styled.div`\r\n  animation: float 3s infinite;\r\n\r\n  @keyframes float {\r\n    0% {\r\n      transform: translateY(0px);\r\n    }\r\n    50% {\r\n      transform: translateY(-10px);\r\n    }\r\n    100% {\r\n      transform: translateY(0px);\r\n    }\r\n  }\r\n`;\r\n\r\n// 10. ToolTip\r\nexport const ToolTip = styled.span`\r\n  position: relative;\r\n  &:hover::before {\r\n    content: attr(data-tip);\r\n    position: absolute;\r\n    bottom: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    color: white;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\n// ... You can keep expanding this based on your project's needs.\r\n\r\n\r\n\r\n// ... Previous Components ...\r\n\r\n// 21. Parallax Container: A parallax effect container for background images\r\n\r\n\r\n// 22. Neumorphic Button: A button with a soft UI effect\r\n\r\n\r\n/////// ************************************************************************************************\r\n\r\n// 11. Skewed Button: Provides a slanted button effect\r\nexport const SkewedButton = styled.button`\r\n  transform: skew(-10deg);\r\n  background: #FFA500;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n\r\n  &:hover {\r\n    background: #FF8C00;\r\n  }\r\n`;\r\n\r\n\r\nexport const GrowHorizontalLine = styled.div`\r\n   width: 50%;  // adjust width as needed for your requirements\r\n  height: 3px;\r\n  transition: width 0.3s;\r\n\r\n  // Styles from GlowingLine\r\n  margin: 20px;\r\n  background-color: ${props => props.lineColor || '#00DFA2'};\r\n  transition: box-shadow 0.3s, width 0.8s;  // merging transitions\r\n  box-shadow: 0 0 8px ${props => props.shadowColor || '#00DFA2'};\r\n\r\n  &:hover {\r\n    width: 100%;  // or whatever your hover effect should be\r\n  }\r\n\r\n \r\n`;\r\n\r\n// Vertical line that grows in height upon hover.\r\n\r\n\r\n// 12. Glassmorphism Card: Trending glass effect design pattern\r\nexport const GlassCard = styled.div`\r\nmin-height: 100%;\r\nheight: auto;\r\npadding:0;\r\n  background: rgba(255, 255, 255, 0.01);\r\n  padding: 1px;\r\n  border-radius: 5px;\r\n  height:100%;\r\n  backdrop-filter: blur(10px);\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  margin-bottom:20px;\r\n  padding-bottom:0;\r\n  \r\n  h5 {\r\n    margin:0px;!important\r\n    padding:0px;!important\r\n\r\n\r\n  }\r\n  p {\r\n    margin:0px;!important\r\n    padding:0px;!important\r\n\r\n\r\n   \r\n\r\n\r\n  }\r\n  \r\n  &:hover ${GrowVerticalLine} {\r\n    height: ${props => props.dynamicHeight || '50px'};\r\n  }\r\n&:hover ${GrowHorizontalLine} {\r\n    width: 100%; \r\n}\r\n\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.02) !important; \r\n    border-radius: 5px !important;\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15) !important;\r\n    \r\n    \r\n\r\n    p {\r\n      color: #E8EAE6 !important;  // Change paragraph color to E8EAE6 on hover\r\n    }\r\n\r\n    h5 {\r\n      color: #35A29F !important;  // Change h3 color to BEF992 on hover\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n// 13. Text with Gradient Effect\r\n\r\n\r\n// 14. Blob Effect: Creates organic shaped blob as a background\r\nexport const BlobBackground = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  background: #FFA500;\r\n  border-radius: 50%;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -10px;\r\n    right: -10px;\r\n    background: #FFA500;\r\n    width: 80%;\r\n    height: 80%;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\n// 15. Ribbon Banner: Creates a ribbon-like banner effect on a card or box\r\nexport const RibbonBanner = styled.div`\r\n  position: relative;\r\n  padding: 20px;\r\n  &:before, &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n  }\r\n  &:before {\r\n    left: 0;\r\n    border-width: 10px 10px 0;\r\n    border-color: #FFA500 transparent transparent;\r\n  }\r\n  &:after {\r\n    right: 0;\r\n    border-width: 0 10px 10px;\r\n    border-color: transparent transparent #FFA500;\r\n  }\r\n`;\r\n\r\n// 16. Dashed Outline Container: Useful for highlighting important sections\r\nexport const DashedContainer = styled.div`\r\n  border: 2px dashed #FFA500;\r\n  padding: 10px;\r\n`;\r\n\r\n// 17. Animated Checkbox: Checkbox with an animation upon check\r\nexport const AnimatedCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n  &:checked::before {\r\n    content: '\\\\2713'; // Unicode checkmark\r\n    position: absolute;\r\n    font-size: 1.5rem;\r\n    animation: checkmark 0.4s ease-in-out;\r\n  }\r\n\r\n  @keyframes checkmark {\r\n    from {\r\n      transform: scale(0);\r\n    }\r\n    to {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`;\r\n\r\n// 18. Expanding Border Input: Input field with an expanding border effect on focus\r\nexport const ExpandingBorderInput = styled.input`\r\n  border: 1px solid #aaa;\r\n  transition: border 0.3s;\r\n\r\n  &:focus {\r\n    border-width: 3px;\r\n  }\r\n`;\r\n\r\n// 19. Rotating Loader: Rotating circle, useful for loading indicators\r\nexport const RotatingLoader = styled.div`\r\n  border: 4px solid rgba(255, 165, 0, 0.3);\r\n  border-top: 4px solid #FFA500;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  animation: spin 1s linear infinite;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\n// 20. Zigzag Separator: Zigzag shaped divider to separate sections\r\nexport const ZigzagSeparator = styled.div`\r\n  background: repeating-linear-gradient(-45deg, #FFA500, #FFA500 10px, transparent 10px, transparent 20px);\r\n  height: 10px;\r\n`;\r\n\r\n// ... You can continue adding more components or customize these as per your requirements.\r\n\r\n//******************************** */\r\n\r\n\r\nexport const NeumorphicButton = styled.button`\r\n  background: #e0e0e0;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  box-shadow: -5px -5px 10px #ffffff, 5px 5px 10px #aeaeae;\r\n  transition: all 0.3s ease;\r\n\r\n  &:active {\r\n    box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 7px #aeaeae;\r\n  }\r\n`;\r\n\r\n// 23. Floating Label Input: Input with a floating label animation\r\nexport const FloatingLabelInput = styled.div`\r\n  position: relative;\r\n\r\n  input {\r\n    border: none;\r\n    border-bottom: 2px solid #aaa;\r\n    padding: 10px 0;\r\n    width: 100%;\r\n    font-size: 1rem;\r\n    &:focus {\r\n      outline: none;\r\n      border-bottom-color: #FFA500;\r\n    }\r\n    &:focus + label,\r\n    &:not(:placeholder-shown) + label {\r\n      top: -20px;\r\n      font-size: 0.8rem;\r\n      color: #FFA500;\r\n    }\r\n  }\r\n\r\n  label {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    font-size: 1rem;\r\n    color: #777;\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\n\r\n// 24. Blurred Background Section: A section with a frosted glass effect\r\nexport const BlurredBackground = styled.section`\r\n  backdrop-filter: blur(5px);\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\n// 25. Responsive Grid: A grid that adjusts its columns based on the screen size\r\nexport const ResponsiveGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n`;\r\n\r\n// 26. Bouncing Loader: A simple bouncing dot animation for loading indicators\r\nexport const BouncingLoader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  div {\r\n    width: 10px;\r\n    height: 10px;\r\n    background: #FFA500;\r\n    border-radius: 50%;\r\n    margin: 0 5px;\r\n    animation: bounce 0.8s infinite alternate;\r\n    \r\n    &:nth-child(2) {\r\n      animation-delay: 0.2s;\r\n    }\r\n    &:nth-child(3) {\r\n      animation-delay: 0.4s;\r\n    }\r\n  }\r\n\r\n  @keyframes bounce {\r\n    from {\r\n      transform: translateY(0);\r\n    }\r\n    to {\r\n      transform: translateY(-15px);\r\n    }\r\n  }\r\n`;\r\n\r\n// 27. Radial Progress Bar: A circular progress indicator\r\nexport const RadialProgressBar = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  border: 5px solid #e0e0e0;\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 5px;\r\n    right: 5px;\r\n    bottom: 5px;\r\n    border-radius: 50%;\r\n    background: #fff;\r\n    z-index: 1;\r\n  }\r\n\r\n  div {\r\n    position: absolute;\r\n    width: 50%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    top: 0;\r\n\r\n    &:first-child {\r\n      left: 0;\r\n      transform: rotate(${props => props.percentage <= 50 ? 0 : (props.percentage - 50) * 1.8}deg);\r\n      background: #FFA500;\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      left: 50%;\r\n      background: ${props => props.percentage <= 50 ? \"transparent\" : \"#FFA500\"};\r\n    }\r\n  }\r\n`;\r\n\r\n// 28. Gradient Background Container\r\nexport const GradientContainer = styled.div`\r\nbackground: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n  padding: 20px;\r\n  color: white;\r\n  width:300px;\r\n  height:50px;\r\n\r\n`;\r\n\r\n// 29. Tooltip: Useful for providing additional information on hover\r\nexport const Tooltip = styled.span`\r\n  position: relative;\r\n\r\n  &:hover::after {\r\n    content: attr(data-tooltip);\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: rgba(0, 0, 0, 0.8);\r\n    color: white;\r\n    border-radius: 5px;\r\n    padding: 5px 10px;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\n// 30. Star Rating: Display star ratings\r\nexport const StarRating = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  span {\r\n    font-size: 1.5rem;\r\n    color: ${props => props.active ? \"#FFA500\" : \"#e0e0e0\"};\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\n\r\nexport const TextMod = styled.span`\r\n  font-size: ${props => props.size || '1rem'};\r\n  color: ${props => props.color || 'black'};\r\n  font-style: ${props => props.type || 'normal'};\r\n  font-weight: ${props => props.weight || 'normal'};\r\n  font-family: ${props => props.font || 'Arial, sans-serif'};\r\n  text-decoration: ${props => props.decoration || 'none'};\r\n  text-transform: ${props => props.transform || 'none'};\r\n  letter-spacing: ${props => props.spacing || 'normal'};\r\n  line-height: ${props => props.lineHeight || 'normal'};\r\n`;\r\n//                            TODO:\r\n\r\n// Horizontal line that grows in width upon hover.\r\n\r\n\r\n\r\n// Line made of dots that expand in spacing upon hover.\r\nexport const DottedLineExpand = styled.div`\r\n  height: 2px;\r\n  border-bottom: 2px dotted ${props => props.lineColor || '#333'};\r\n  transition: border-spacing 0.3s;\r\n\r\n  &:hover {\r\n    border-spacing: 5px;\r\n  }\r\n`;\r\n\r\n// Line that subtly increases and decreases in thickness.\r\nconst breatheAnimation = keyframes`\r\n  0%, 100% {\r\n    height: 2px;\r\n  }\r\n  50% {\r\n    height: 4px;\r\n  }\r\n`;\r\n\r\nexport const LineBreathe = styled.div`\r\n  background-color: ${props => props.lineColor || '#333'};\r\n  animation: ${breatheAnimation} 1.5s infinite;\r\n`;\r\n\r\n// Line that emits a subtle glow upon hover.\r\nexport const GlowingLine = styled.div`\r\n  height: 3px;\r\n  margin:20px;\r\n  background-color: ${props => props.lineColor || '#00DFA2'};\r\n  transition: box-shadow 0.3s;\r\n  box-shadow: 0 0 8px ${props => props.shadowColor || '#00DFA2'};\r\n\r\n`;\r\n\r\n// Line that pulses in size upon hover.\r\nconst pulseAnimation = keyframes`\r\n  0%, 100% {\r\n    height: 2px;\r\n  }\r\n  50% {\r\n    height: 4px;\r\n  }\r\n`;\r\n\r\nexport const LinePulse = styled.div`\r\n  background-color: ${props => props.lineColor || '#333'};\r\n\r\n  &:hover {\r\n    animation: ${pulseAnimation} 1s infinite;\r\n  }\r\n`;\r\n\r\n// Line made of dashes that animate as if moving.\r\nconst dashAnimation = keyframes`\r\n  to {\r\n    background-position: 100% 0;\r\n  }\r\n`;\r\n\r\nexport const DashAnimatedLine = styled.div`\r\n  height: 2px;\r\n  background-image: linear-gradient(90deg, ${props => props.lineColor || '#333'} 50%, transparent 50%);\r\n  background-size: 10px 100%;\r\n  animation: ${dashAnimation} 1s infinite linear;\r\n`;\r\n\r\n// Line that shrinks on hover.\r\nexport const LineShrink = styled.div`\r\n  height: 2px;\r\n  background-color: ${props => props.lineColor || '#333'};\r\n  width: 100%;\r\n  transition: width 0.3s;\r\n\r\n  &:hover {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\n// Line that transitions its color upon hover.\r\nexport const ColorTransitionLine = styled.div`\r\n  height: 2px;\r\n  background-color: ${props => props.initialColor || '#333'};\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.hoverColor || '#FFA500'};\r\n  }\r\n`;\r\n\r\n// Line that animates like a wave.\r\nconst waveAnimation = keyframes`\r\n  0%, 100% {\r\n    transform: translateY(0);\r\n  }\r\n  50% {\r\n    transform: translateY(5px);\r\n  }\r\n`;\r\n\r\nexport const WavyLine = styled.div`\r\n  height: 2px;\r\n  background-color: ${props => props.lineColor || '#333'};\r\n  animation: ${waveAnimation} 1s infinite;\r\n`;\r\n\r\n\r\n\r\n\r\n// -------------------\r\n// Shapes Animations:\r\n// -------------------\r\n\r\n// Circle shape that expands on interaction.\r\nexport const CircleExpand = styled.div`\r\n  width: 450px;\r\n  height: 450px;\r\n  border-radius: 50%;\r\n  background-color: ${props => props.lineColor || '#00DFA2'};\r\n  box-shadow: 0 0 8px ${props => props.shadowColor || '#00DFA2'};  transition: transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\n// Square that rotates upon a certain action.\r\nexport const SquareRotate = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: green;\r\n  transition: transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: rotate(45deg);\r\n  }\r\n`;\r\n\r\n// Triangle that tilts upon interaction.\r\nexport const TriangleTilt = styled.div`\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 25px solid transparent;\r\n  border-right: 25px solid transparent;\r\n  border-bottom: 50px solid yellow;\r\n  transition: transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: skewY(10deg);\r\n  }\r\n`;\r\n\r\n// Star shape that pulses using keyframes.\r\n\r\n\r\nexport const StarPulse = styled.div`\r\n  clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);\r\n  width: 100px;\r\n  height: 100px;\r\n  background-color: gold;\r\n  animation: ${pulseAnimation} 1s infinite;\r\n`;\r\n\r\n// Polygon that jitters using keyframes.\r\nconst jitterAnimation = keyframes`\r\n  0% { transform: translate(0); }\r\n  25% { transform: translate(-5px, 5px); }\r\n  50% { transform: translate(5px, -5px); }\r\n  75% { transform: translate(-5px, -5px); }\r\n  100% { transform: translate(5px, 5px); }\r\n`;\r\n\r\nexport const PolygonJitter = styled.div`\r\n  width: 90px;\r\n  height: 90px;\r\n  clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);\r\n  background-color: orange;\r\n  animation: ${jitterAnimation} 0.5s infinite;\r\n`;\r\n\r\n// ------------------------------\r\n// Image animations, styling, effects:\r\n// ------------------------------\r\n\r\n// Image that zooms in slightly upon hover.\r\nexport const ImageZoom = styled.img`\r\n  transition: transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\n// Image that transitions from grayscale to color when hovered over.\r\nexport const ImageGrayscaleToColor = styled.img`\r\n  filter: grayscale(100%);\r\n  transition: filter 0.5s;\r\n\r\n  &:hover {\r\n    filter: grayscale(0%);\r\n  }\r\n`;\r\n\r\n// Image that tilts in 3D space upon hover.\r\nexport const ImageTilt = styled.img`\r\n  transition: transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: perspective(500px) rotateX(10deg) rotateY(10deg);\r\n  }\r\n`;\r\n\r\n// ... Continue for ImagePan and ImageColorTint ...\r\n\r\n\r\n// ------------------------------\r\n// Text Modifications:\r\n// ------------------------------\r\n\r\nexport const DynamicFont = styled.span`\r\n  font-size: ${props => props.size || '16px'};\r\n  font-weight: ${props => props.weight || 'normal'};\r\n`;\r\n\r\nexport const FontFamilySwitcher = styled.span`\r\n  font-family: ${props => props.font || 'Arial, sans-serif'};\r\n`;\r\n\r\nexport const ColoredText = styled.span`\r\n  color: ${props => props.color || 'black'};\r\n`;\r\n\r\nexport const WeightedText = styled.span`\r\n  font-weight: ${props => props.weight || 'normal'};\r\n`;\r\n\r\nexport const ItalicText = styled.span`\r\n  font-style: ${({ italic }) => (italic ? 'italic' : 'normal')};\r\n`;\r\n\r\nexport const UnderlinedText = styled.span`\r\n  text-decoration: ${({ underline }) => (underline ? 'underline' : 'none')};\r\n`;\r\n\r\nexport const UpperCaseText = styled.span`\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const LowerCaseText = styled.span`\r\n  text-transform: lowercase;\r\n`;\r\n\r\nexport const LetterSpacingText = styled.span`\r\n  letter-spacing: ${({ spacing }) => spacing || 'normal'};\r\n`;\r\n\r\nexport const LineHeightText = styled.span`\r\n  line-height: ${({ lineHeight }) => lineHeight || 'normal'};\r\n`;\r\n\r\n// ------------------------------\r\n// On Hover:\r\n// ------------------------------\r\n\r\nconst elevateAnimation = keyframes`\r\n  from { transform: translateY(0); }\r\n  to { transform: translateY(-10px); }\r\n`;\r\n\r\nexport const HoverElevateText = styled.span`\r\n  &:hover {\r\n    animation: ${elevateAnimation} 0.3s forwards;\r\n  }\r\n`;\r\n\r\nexport const ImageRevealDescription = styled.figure`\r\n  background-image: url(${props => props.src});\r\n  width: 200px;\r\n  height: 200px;\r\n  position: relative;\r\n  \r\n  &::before {\r\n    content: '${props => props.caption}';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0,0,0,0.7);\r\n    color: #fff;\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n  }\r\n\r\n  &:hover::before {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const HoverRotateDiv = styled.div`\r\n  &:hover {\r\n    transform: rotate(10deg);\r\n  }\r\n`;\r\n\r\n// ... Continue for other hover effects ...\r\n// --------------\r\n// On Hover:\r\n// --------------\r\n\r\n// TextUnderlineSlide\r\nexport const TextUnderlineSlide = styled.span`\r\n  position: relative;\r\n  padding-bottom: 2px;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 0;\r\n    height: 1px;\r\n    background-color: currentColor;\r\n    transition: width 0.3s;\r\n  }\r\n\r\n  &:hover::after {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n// BackgroundFade\r\nexport const BackgroundFade = styled.div`\r\n  background-color: #f5f5f5; \r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #e0e0e0;\r\n  }\r\n`;\r\n\r\n// HoverScale\r\nexport const HoverScale = styled.div`\r\n  transform: scale(1);\r\n  transition: transform 0.3s;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\n// BorderGlow\r\nexport const BorderGlow = styled.div`\r\n  border: 2px solid #f5f5f5;\r\n  transition: border-color 0.3s;\r\n\r\n  &:hover {\r\n    border-color: #e0e0e0;\r\n  }\r\n`;\r\n\r\n// FlipOnHover\r\nexport const FlipOnHover = styled.div`\r\n  transition: transform 0.6s;\r\n  transform-style: preserve-3d;\r\n\r\n  &:hover {\r\n    transform: rotateY(180deg);\r\n  }\r\n`;\r\n\r\n// ShakeOnHover\r\nconst shakeAnimation = keyframes`\r\n  0% { transform: translate(0); }\r\n  25% { transform: translate(-5px); }\r\n  50% { transform: translate(5px); }\r\n  75% { transform: translate(-5px); }\r\n  100% { transform: translate(0); }\r\n`;\r\n\r\nexport const ShakeOnHover = styled.div`\r\n  &:hover {\r\n    animation: ${shakeAnimation} 0.5s;\r\n  }\r\n`;\r\n// HoverSlideRight\r\nexport const HoverSlideRight = styled.div`\r\n  transform: translateX(0);\r\n  transition: transform 0.3s;\r\n\r\n  &:hover {\r\n    transform: translateX(10px);\r\n  }\r\n`;\r\n\r\n// BackgroundZoom\r\nexport const BackgroundZoom = styled.div`\r\n  background: url(${props => props.bgImage}) center/100% no-repeat;\r\n  transition: background-size 0.4s;\r\n\r\n  &:hover {\r\n    background-size: 120%;\r\n  }\r\n`;\r\n\r\n// HoverPush\r\nexport const HoverPush = styled.button`\r\n  transform: scale(1);\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\n// HoverBounce\r\nconst bounceAnimation = keyframes`\r\n  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\r\n  40% { transform: translateY(-10px); }\r\n  60% { transform: translateY(-5px); }\r\n`;\r\n\r\nexport const HoverBounce = styled.div`\r\n  &:hover {\r\n    animation: ${bounceAnimation} 1s;\r\n  }\r\n`;\r\n\r\n// HoverColorShift\r\nexport const HoverColorShift = styled.div`\r\n  background-color: #f5f5f5;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #0099cc;\r\n  }\r\n`;\r\n\r\n// HoverBlur\r\nexport const HoverBlur = styled.div`\r\n  filter: blur(0);\r\n  transition: filter 0.3s;\r\n\r\n  &:hover {\r\n    filter: blur(4px);\r\n  }\r\n`;\r\n\r\n// HoverSquish\r\nexport const HoverSquish = styled.div`\r\n  transform: scaleY(1);\r\n  transition: transform 0.3s;\r\n\r\n  &:hover {\r\n    transform: scaleY(0.9);\r\n  }\r\n`;\r\n\r\n// HoverWobble\r\nconst wobbleAnimation = keyframes`\r\n  0% { transform: rotate(0); }\r\n  30% { transform: rotate(-5deg); }\r\n  60% { transform: rotate(5deg); }\r\n  100% { transform: rotate(0); }\r\n`;\r\n\r\nexport const HoverWobble = styled.div`\r\n  &:hover {\r\n    animation: ${wobbleAnimation} 0.5s;\r\n  }\r\n`;\r\n\r\n// HoverPop\r\nexport const HoverPop = styled.div`\r\n  transform: scale(1);\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\n// HoverSwing\r\nconst swingAnimation = keyframes`\r\n  20% { transform: rotate(15deg); }\r\n  40% { transform: rotate(-10deg); }\r\n  60% { transform: rotate(5deg); }\r\n  80% { transform: rotate(-5deg); }\r\n  100% { transform: rotate(0deg); }\r\n`;\r\n\r\nexport const HoverSwing = styled.div`\r\n  &:hover {\r\n    animation: ${swingAnimation} 1s;\r\n  }\r\n`;\r\n\r\n// HoverSpin\r\nexport const HoverSpin = styled.div`\r\n  transition: transform 0.6s;\r\n\r\n  &:hover {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\nexport const ChangeTextColorOnHover = styled.div`\r\n  transition: 0.3s all;\r\n  &:hover {\r\n    color: ${props => props.hoverColor ||props.color };  // defaults to blue if no hoverColor provided\r\n  }\r\n`;\r\n\r\n\r\n/// ON CLICK////////////////////////////////\r\n\r\n// Animations and mixins\r\nconst shake = keyframes`\r\n  10%, 90% { transform: translate3d(-1px, 0, 0); }\r\n  20%, 80% { transform: translate3d(2px, 0, 0); }\r\n  30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }\r\n  40%, 60% { transform: translate3d(4px, 0, 0); }\r\n`;\r\n\r\n// Components\r\n\r\nexport const ClickShake = styled.div`\r\n  &:active {\r\n    animation: ${shake} 0.5s cubic-bezier(.36,.07,.19,.97) both;\r\n  }\r\n`;\r\n\r\nexport const ClickFade = styled.div`\r\n  opacity: 1;\r\n  transition: opacity 0.3s;\r\n\r\n  &:active {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nexport const ClickPush = styled.div`\r\n  transform: scale(1);\r\n  transition: transform 0.2s;\r\n\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nexport const ClickBounce = styled.div`\r\n  &:active {\r\n    animation: bounce 0.3s;\r\n  }\r\n`;\r\n\r\nexport const ClickRipple = styled.div`\r\n  // This is a simplified version and can be enhanced further\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    background: radial-gradient(circle, rgba(255,255,255,1), rgba(255,255,255,0.4));\r\n    transform: scale(0);\r\n    transition: transform 0.5s, opacity 1s;\r\n    opacity: 0;\r\n  }\r\n\r\n  &:active:after {\r\n    transform: scale(4);\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nexport const ClickColorChange = styled.div`\r\n  color: black;\r\n\r\n  &:active {\r\n    color: red;  // Example color, adjust as needed\r\n  }\r\n`;\r\n\r\nexport const ClickRotate = styled.div`\r\n  transition: transform 0.3s;\r\n\r\n  &:active {\r\n    transform: rotate(90deg);\r\n  }\r\n`;\r\n\r\nexport const ClickFlip = styled.div`\r\n  transition: transform 0.3s;\r\n  transform-style: preserve-3d;\r\n\r\n  &:active {\r\n    transform: rotateY(180deg);\r\n  }\r\n`;\r\n\r\nexport const ClickZoom = styled.div`\r\n  transition: transform 0.3s;\r\n\r\n  &:active {\r\n    transform: scale(1.5); // Example scale factor, adjust as needed\r\n  }\r\n`;\r\n\r\nexport const ClickSlide = styled.div`\r\n  transition: transform 0.3s;\r\n\r\n  &:active {\r\n    transform: translateX(100px); // Example translation, adjust as needed\r\n  }\r\n`;\r\n\r\nexport const ClickPulse = styled.div`\r\n  // Add pulse animation here\r\n`;\r\n\r\nexport const ClickJiggle = styled.div`\r\n  // Add jiggle animation here\r\n`;\r\n\r\nexport const ClickSquish = styled.div`\r\n  // Add squish animation here\r\n`;\r\n\r\nexport const ClickBackgroundFill = styled.div`\r\n  transition: background-color 0.3s;\r\n\r\n  &:active {\r\n    background-color: blue; // Example color, adjust as needed\r\n  }\r\n`;\r\n\r\nexport const ClickBorderExpand = styled.div`\r\n  border: 1px solid black; // Default state\r\n  transition: border 0.3s;\r\n\r\n  &:active {\r\n    border-width: 5px;  // Example width, adjust as needed\r\n  }\r\n`;\r\n\r\nexport const ClickShadowGrow = styled.div`\r\n  box-shadow: 0px 0px 5px rgba(0,0,0,0.5); // Default state\r\n  transition: box-shadow 0.3s;\r\n\r\n  &:active {\r\n    box-shadow: 0px 0px 15px rgba(0,0,0,0.8);  // Example shadow, adjust as needed\r\n  }\r\n`;\r\n\r\nexport const ClickTextReveal = styled.div`\r\n  // The actual implementation may vary based on the desired effect\r\n`;\r\n\r\nexport const ClickWave = styled.div`\r\n  // Add wave animation here\r\n`;\r\n\r\nexport const ClickTilt = styled.div`\r\n  transition: transform 0.3s;\r\n\r\n  &:active {\r\n    transform: skewX(20deg);  // Example skew, adjust as needed\r\n  }\r\n`;\r\n\r\nexport const ClickVibrate = styled.div`\r\n  // Add vibrate animation here\r\n`;\r\n\r\nconst gradientShift = keyframes`\r\n  0%, 100% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n`;\r\n\r\nconst gradientAnimation = css`\r\n  animation: ${gradientShift} 6s linear infinite;\r\n`;\r\n\r\nconst getColor = (color) => {\r\n  return color || 'transparent';\r\n};\r\n\r\nexport const HoverGradientShift = styled.div`\r\n  width:${props => props.width||300}px;\r\n  height:${props => props.height||200}px;\r\n    background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n    ${gradientAnimation}\r\n\r\n  &:hover {\r\n    background: linear-gradient(to right, ${props => getColor(props.hoverStartColor)}, ${props => getColor(props.hoverEndColor)});\r\n    animation-direction: reverse;\r\n  }\r\n`;\r\n\r\nexport const GradientBackground = styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%; \r\n\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: linear-gradient(to bottom, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n`;\r\n\r\n\r\nexport const GradientText = styled.h1`\r\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n  -webkit-background-clip: text;\r\n  color: transparent;\r\n`;\r\n\r\n\r\n\r\n\r\nexport const GradientBorder = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  border: 5px solid transparent;\r\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n  background-clip: padding-box;\r\n`;\r\n\r\nexport const AnimatedGradient = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n  ${gradientAnimation}\r\n`;\r\n\r\nexport const GradientMask = styled.div`\r\n  position: relative;\r\n  width: 200px;\r\n  height: 200px;\r\n  overflow: hidden;\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(to right, transparent, black);\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nexport const GradientButton = styled.button`\r\n  background: linear-gradient(to right, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n  border: none;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n  &:hover {\r\n    background: linear-gradient(to right, ${props => getColor(props.endColor)}, ${props => getColor(props.startColor)});\r\n  }\r\n`;\r\n\r\nexport const GradientScrollbar = styled.div`\r\n  width: 300px;\r\n  height: 500px;\r\n  overflow: auto;\r\n  &::-webkit-scrollbar {\r\n    width: 10px;\r\n    background: linear-gradient(to bottom, ${props => getColor(props.startColor)}, ${props => getColor(props.endColor)});\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n    border-radius: 5px;\r\n    background-clip: padding-box;\r\n  }\r\n`;\r\n\r\nexport const GradientShadow = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  box-shadow: 5px 5px 20px -5px #888888, inset 0px 0px 5px 0px #ffffff;\r\n  ${gradientAnimation}\r\n`;\r\n\r\nexport const GradientIconFill = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  background: url('your-icon-url.png') center/cover;\r\n  mask: linear-gradient(to right, transparent, black);\r\n  mask-composite: destination-out;\r\n  background-clip: padding-box;\r\n`;\r\n\r\n// Usage example:\r\n/* \r\n<GradientBackground startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<GradientText startColor=\"#ff6e7f\" endColor=\"#bfe9ff\">Gradient Text</GradientText>\r\n<HoverGradientShift startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<GradientBorder startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<AnimatedGradient startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<GradientMask />\r\n<GradientButton startColor=\"#ff6e7f\" endColor=\"#bfe9ff\">Gradient Button</GradientButton>\r\n<GradientScrollbar startColor=\"#ff6e7f\" endColor=\"#bfe9ff\">\r\n  Scrollable content\r\n</GradientScrollbar>\r\n<GradientShadow startColor=\"#ff6e7f\" endColor=\"#bfe9ff\" />\r\n<GradientIconFill /> \r\n*/\r\n\r\n"],"mappings":"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;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMyD,eAAe,GAAGtE,MAAM,CAACI,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMmE,OAAO,GAAGvE,MAAM,CAACS,IAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAIA;;AAEA;;AAGA;;AAGA;;AAEA;AACA,OAAO,MAAM+D,YAAY,GAAGxE,MAAM,CAACyE,MAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,OAAO,MAAMC,kBAAkB,GAAG1E,MAAM,CAACI,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBE,KAAK,IAAIA,KAAK,CAACqC,SAAS,IAAI,SAAU;AAC5D;AACA,wBAAwBrC,KAAK,IAAIA,KAAK,CAACwC,WAAW,IAAI,SAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAGA;AACA,OAAO,MAAM6B,SAAS,GAAG3E,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYyC,gBAAiB;AAC7B,cAAcvC,KAAK,IAAIA,KAAK,CAAC2C,aAAa,IAAI,MAAO;AACrD;AACA,UAAUyB,kBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAID;;AAGA;AACA,OAAO,MAAME,cAAc,GAAG5E,MAAM,CAACI,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMyE,YAAY,GAAG7E,MAAM,CAACI,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAM0E,eAAe,GAAG9E,MAAM,CAACI,GAAI;AAC1C;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAM2E,gBAAgB,GAAG/E,MAAM,CAACgF,KAAK,CAACC,KAAK,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,CAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMC,oBAAoB,GAAGnF,MAAM,CAACgF,KAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAGpF,MAAM,CAACI,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMiF,eAAe,GAAGrF,MAAM,CAACI,GAAI;AAC1C;AACA;AACA,CAAC;;AAED;;AAEA;;AAGA,OAAO,MAAMkF,gBAAgB,GAAGtF,MAAM,CAACyE,MAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMc,kBAAkB,GAAGvF,MAAM,CAACI,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMoF,iBAAiB,GAAGxF,MAAM,CAACyF,OAAQ;AAChD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG1F,MAAM,CAACI,GAAI;AACzC;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMuF,cAAc,GAAG3F,MAAM,CAACI,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMwF,iBAAiB,GAAG5F,MAAM,CAACI,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0BE,KAAK,IAAIA,KAAK,CAACuF,UAAU,IAAI,EAAE,GAAG,CAAC,GAAG,CAACvF,KAAK,CAACuF,UAAU,GAAG,EAAE,IAAI,GAAI;AAC9F;AACA;AACA;AACA;AACA;AACA,oBAAoBvF,KAAK,IAAIA,KAAK,CAACuF,UAAU,IAAI,EAAE,GAAG,aAAa,GAAG,SAAU;AAChF;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG9F,MAAM,CAACI,GAAI;AAC5C,wCAAwCE,KAAK,IAAIuB,QAAQ,CAACvB,KAAK,CAACwB,UAAU,CAAE,KAAIxB,KAAK,IAAIuB,QAAQ,CAACvB,KAAK,CAACyB,QAAQ,CAAE;AAClH;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMgE,OAAO,GAAG/F,MAAM,CAACS,IAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMuF,UAAU,GAAGhG,MAAM,CAACI,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,aAAaE,KAAK,IAAIA,KAAK,CAAC2F,MAAM,GAAG,SAAS,GAAG,SAAU;AAC3D;AACA;AACA,CAAC;AAGD,OAAO,MAAMC,OAAO,GAAGlG,MAAM,CAACS,IAAK;AACnC,eAAeH,KAAK,IAAIA,KAAK,CAACC,IAAI,IA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AAM,CAACI,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMmJ,UAAU,GAAGvJ,MAAM,CAACI,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMoJ,WAAW,GAAGxJ,MAAM,CAACI,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMqJ,cAAc,GAAGvJ,SAAU;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMwJ,YAAY,GAAG1J,MAAM,CAACI,GAAI;AACvC;AACA,iBAAiBqJ,cAAe;AAChC;AACA,CAAC;AACD;AACA,OAAO,MAAME,eAAe,GAAG3J,MAAM,CAACI,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMwJ,cAAc,GAAG5J,MAAM,CAACI,GAAI;AACzC,oBAAoBE,KAAK,IAAIA,KAAK,CAAC4D,OAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAM2F,SAAS,GAAG7J,MAAM,CAACyE,MAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMqF,eAAe,GAAG5J,SAAU;AAClC;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAM6J,WAAW,GAAG/J,MAAM,CAACI,GAAI;AACtC;AACA,iBAAiB0J,eAAgB;AACjC;AACA,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAGhK,MAAM,CAACI,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAM6J,SAAS,GAAGjK,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAM8J,WAAW,GAAGlK,MAAM,CAACI,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAM+J,eAAe,GAAGjK,SAAU;AAClC;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMkK,WAAW,GAAGpK,MAAM,CAACI,GAAI;AACtC;AACA,iBAAiB+J,eAAgB;AACjC;AACA,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAGrK,MAAM,CAACI,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMkK,cAAc,GAAGpK,SAAU;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMqK,UAAU,GAAGvK,MAAM,CAACI,GAAI;AACrC;AACA,iBAAiBkK,cAAe;AAChC;AACA,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAGxK,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMqK,sBAAsB,GAAGzK,MAAM,CAACI,GAAI;AACjD;AACA;AACA,aAAaE,KAAK,IAAIA,KAAK,CAAC+G,UAAU,IAAG/G,KAAK,CAAC6F,KAAO;AACtD;AACA,CAAC;;AAGD;;AAEA;AACA,MAAMuE,KAAK,GAAGxK,SAAU;AACxB;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA,OAAO,MAAMyK,UAAU,GAAG3K,MAAM,CAACI,GAAI;AACrC;AACA,iBAAiBsK,KAAM;AACvB;AACA,CAAC;AAED,OAAO,MAAME,SAAS,GAAG5K,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMyK,SAAS,GAAG7K,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAM0K,WAAW,GAAG9K,MAAM,CAACI,GAAI;AACtC;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAM2K,WAAW,GAAG/K,MAAM,CAACI,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAM4K,gBAAgB,GAAGhL,MAAM,CAACI,GAAI;AAC3C;AACA;AACA;AACA;AAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}